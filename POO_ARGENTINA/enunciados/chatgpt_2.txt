Por supuesto, aquí tienes una versión modificada del enunciado:

---

Vamos a desarrollar un sistema de gestión de una tienda de mascotas. Este sistema permitirá administrar diferentes tipos de mascotas, como perros, gatos y pájaros.

1. **Definición de clases y estructuras de datos:**

   - Crea una clase abstracta `Mascota` que contenga los siguientes atributos y métodos:
     - Atributos: `id`, `nombre`, `edad`.
     - Métodos abstractos: `calcularCostoMensual()`, `mostrarDetalles()`.

   - Crea tres clases que hereden de `Mascota`: `Perro`, `Gato` y `Pajaro`. Cada una de estas clases debe implementar los métodos abstractos heredados y definir sus propios atributos y métodos específicos:
     - `Perro` debe tener un atributo `tamano` (pequeño, mediano, grande) y un método para calcular el costo mensual, que puede variar según el tamaño.
     - `Gato` debe tener un atributo `pelaje` (corto, largo) y un método para calcular el costo mensual, que puede variar según el tipo de pelaje.
     - `Pajaro` debe tener un atributo `tipo` (canario, loro) y un método para calcular el costo mensual, que puede variar según el tipo de pájaro.

2. **Definición de interfaces:**

   - Crea una interfaz `RegistroMascotas` con métodos para añadir, actualizar y buscar mascotas en una base de datos.
   - crea una interfaz 'pelaje' con metodos para saber tipo de pelo y detalles

3. **Implementación de base de datos:**

   - Utiliza una base de datos PostgreSQL para almacenar la información de las mascotas. Crea una tabla llamada `mascotas` con los campos correspondientes para almacenar la información de cada mascota.

4. **Clase de gestión de base de datos:**

   - Crea una clase `GestorBDMascotas` que implemente la interfaz `RegistroMascotas` y tenga una implementación básica para los métodos de la interfaz. Esta clase deberá manejar la conexión a la base de datos, así como las consultas y operaciones de inserción, actualización y búsqueda de mascotas.

5. **Interfaz de usuario:**

   - Crea un menú que permita al usuario realizar las siguientes acciones:
     1. Agregar una nueva mascota.
     2. Buscar mascotas por tipo.
     3. Mostrar todas las mascotas.
     4. Actualizar los datos de una mascota.
     5. Salir del programa.

6. **Carga de datos:**

   - Crea un metodo dentro de la interfaz para leer los datos de un txt y cargarlos en bd

7. **Pruebas:**

   - Crea una clase `Main` que contenga el método `main` donde se realizará lo siguiente:
   - Crear instancias de varios tipos de empleados (Administrativo, Técnico, Gerente).
   - Almacenar los empleados en una lista de tipo `Empleado`.
   - Utilizar el polimorfismo para mostrar los detalles y calcular el salario de cada empleado, independientemente de su tipo.
   - Utilizar el método `insertar` de la clase `GestorBD` para guardar los empleados en la base de datos.
   - Consultar la base de datos para recuperar los empleados almacenados y mostrar sus detalles.

Este ejercicio te permitirá aplicar y comprender en profundidad el uso de herencia, clases abstractas, interfaces, polimorfismo, métodos abstractos y la interacción con bases de datos en Java, en un contexto diferente al de los ejercicios anteriores.